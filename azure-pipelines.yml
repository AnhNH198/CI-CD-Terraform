trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  subscription: Microsoft Azure Sponsorship 6k(7d292bf3-ccaf-46d1-aede-7778d3c017b4)
  resourceGroup: anhnh-tfstate
  storageAccount: anhnhtfstate
  container: tfstate
  tfstateFile: terraform.tfstate
  anyTfChanges: false

steps:
  - task: TerraformInstaller@0
    displayName: install Terraform v0.12.28
    inputs:
      terraformVersion: '0.12.28'
  
  - task: TerraformTaskV1@0
    displayName: terraform init
    inputs:
      provider: 'azurerm'
      command: 'init'
      workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
      backendServiceArm: '$(subscription)'
      backendAzureRmResourceGroupName: '$(resourceGroup)'
      backendAzureRmStorageAccountName: '$(storageAccount)'
      backendAzureRmContainerName: '$(container)'
      backendAzureRmKey: '$(tfstateFile)'
  
  - task: TerraformTaskV1@0
    displayName: terraform plan -out=tfplan
    inputs:
      provider: 'azurerm'
      command: 'plan'
      workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
      commandOptions: '-out=tfplan'
      # commandOptions: '-detailed-exitcode -out=tfplan'
      environmentServiceNameAzureRM: '$(subscription)'

  - task: PowerShell@2
    displayName: detect any terraform change
    inputs:
      workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
      targetType: 'inline'
      script: |
        # Write-Host "LASTEXITCODE : $LASTEXITCODE"
        $plan = $(terraform show -json tfplan | ConvertFrom-Json)
        $actions = $plan.resource_changes.change.actions
        Write-Host "Terraform actions : $actions"
        if (($actions -contains 'create') -or ($actions -contains 'delete') -or ($actions -contains 'update'))
        {
          Write-Host "Terraform will perform the following actions : $actions"
          Write-Host "##vso[task.setvariable variable=anyTfChanges;]true"
        }
        else
        {
          Write-Host "There is no change detected in Terraform tfplan file"
        }
  - task: TerraformTaskV1@0
    displayName: terraform apply tfplan
    condition: eq(variables.anyTfChanges,Â true)
    inputs:
      provider: 'azurerm'
      command: 'apply'
      workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
      commandOptions: 'tfplan'
      environmentServiceNameAzureRM: '$(subscription)'